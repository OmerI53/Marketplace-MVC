@inject UserManager<User> UserManager
@inject RoleManager<IdentityRole> RoleManager

@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using TestMVC.Data

@{
    ViewData["Title"] = "User List";
}
@model IEnumerable<TestMVC.Data.User>
<script>
        $(document).ready(function() {
            $('.fa-edit').on('click', function() {
                var row = $(this).closest('tr');
                var userId = row.data('user-id');
                var userName = row.find('td:eq(0)').text();
                var userRole = row.find('td:eq(1)').text();

                $('#editUserModal #userId').val(userId);
                $('#editUserModal #userName').val(userName);
                $('#editUserModal #userRole').val(userRole);

                $('#editUserModal').modal('show');
            });
            
            $('#close').on('click', function() {
                $('#editUserModal').modal('hide');
            });

            $('#saveChanges').on('click', function() {
                var formData = $('#editUserForm').serialize();

                $.ajax({
                url: '@Url.Action("EditUser", "Admin")',
                type: 'POST',
                data: formData,
                success: function(response) {
                // Handle success response
                $('#editUserModal').modal('hide');
                location.reload(); // Reload the page to reflect changes
                },
                error: function(xhr, status, error) {
                // Handle error response
                alert('Error: ' + error);
                    }
                });
            });
        });
</script>

<table class="table">
    <title>User List</title>
    <thead>
    <tr>
        <th>Name</th>
        <th>Role</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var user in await UserManager.Users.ToListAsync())
    {
        <tr data-user-id="@user.Id">
            <td>@user.Name</td>
            <td>@UserManager.GetRolesAsync(user).Result[0]</td>
            <td>
                <i class="fas fa-edit"></i>
            </td>
        </tr>
    }
    </tbody>
</table>

@* Modal structure *@
<div class="modal fade" id="editUserModal" tabindex="-1" aria-labelledby="editUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editUserModalLabel">Edit User</h5>
                <button aria-label="Close" class="close" data-dismiss="modal" id="close" type="button">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editUserForm">
                    <input type="hidden" id="userId" name="userId"/>
                    <div class="form-group">
                        <label for="userName">Name</label>
                        <input type="text" class="form-control" id="userName" name="userName"/>
                    </div>
                    <div class="form-group">
                        <select class="form-control" id="userRole" name="userRole">
                            @foreach (var role in RoleManager.Roles)
                            {
                                <option value="@role.Name">@role.Name</option>
                            }
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" id="close" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveChanges">Save changes</button>
            </div>
        </div>
    </div>
</div>
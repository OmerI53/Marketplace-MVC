@{
    ViewData["Title"] = "Home Page";
}

@model TestMVC.Data.User
<script>
    function changeQuantity(itemId, increase) {
        fetch(`/UserItem/ChangeQuantity?itemId=${itemId}&increase=${increase}`, {method: 'POST'})
            .then(response => {
                if (response.ok) {
                    window.location.reload();
                }
                return response.json();
            });
    }
    
    function deleteItem(itemId) {
        fetch(`/UserItem/${itemId}`, {method: 'DELETE'})
            .then(response => {
                if (response.ok) {
                    window.location.reload();
                }
                return response.json();
            });
    }
</script>


<div class="text-center container">
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show overlay-alert" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    <h3>@Model.Name</h3>
    <img src="@($"favicon.png")" alt="default profile picture"
         style="width: 250px; height: auto"/>
    <br/>
    <div style="height: 20px"></div>
    <table class="table">
        <thead>Collection</thead>
        <thead>
        <tr>
            <th>Name</th>
            <th>Category</th>
            <th>Price</th>
            <th>Quantity</th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model.UserItems)
        {
            <tr>
                <td>@item.Item.ItemName</td>
                <td>@item.Item.Category</td>
                <td>@item.Price</td>
                <td>@item.Quantity</td>
                <td>
                    <div class="flex-row">
                        <button class="btn btn-primary btn-sm" onclick="changeQuantity('@item.ItemId', true)">+</button>
                        <button class="btn btn-danger btn-sm" onclick="changeQuantity('@item.ItemId', false)">-</button>
                        <button class="btn btn-danger btn-sm" onclick="deleteItem('@item.ItemId')">
                            <i class="fas fa-trash"></i>
                        </button>
                    </div >
                </td >
            </tr>
        }
        </tbody>
    </table>
    <br/>
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal">
        Sell Items
    </button>
</div>

<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
     aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Sell Item</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body justify-content-center">
                @await Html.PartialAsync("_SellItem")
            </div>
        </div>
    </div>
</div>


<style>
    .btn-sm {
        padding: 3px 6px; /* Reduced padding */
        font-size: 10px; /* Reduced font size */
    }

    .btn-danger {
        background-color: red;
        color: white;
    }

    .overlay-alert {
        position: fixed;
        top: 20px; /* Adjust as needed */
        left: 50%;
        transform: translateX(-50%);
        width: auto; /* Adjust as needed */
        z-index: 1050; /* Ensure it's above other elements */
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Optional for a subtle shadow */
    }
</style>